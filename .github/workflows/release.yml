name: Release

on:
  push:
    tags:
      - '*'

jobs:
  github-release:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-

      - name: sbt GitHub Release LoggerF
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        run: |
          echo "======================="
          echo "Run] sbt GitHub release"
          echo "-----------------------"
          echo 'sbt -J-Xmx2048m devOopsGitHubRelease'
          sbt \
            -J-Xmx2048m \
            devOopsGitHubRelease


  github-release-artifacts-and-publish:
    needs: github-release

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { name: "Scala 2", version: "2.11.12", binary-version: "2.11", java-version: "8" }
          - { name: "Scala 2", version: "2.12.12", binary-version: "2.12", java-version: "11" }
          - { name: "Scala 2", version: "2.13.3",  binary-version: "2.13", java-version: "11" }
          - { name: "Scala 3", version: "3.0.0-M3",  binary-version: "3.0.0-M3", java-version: "11" }

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.scala.java-version }}

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-

      - name: "sbt GitHub Release - Upload Artifacts for ${{ matrix.scala.name }} ${{ matrix.scala.version }} - ${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
        run: |
          echo "Run] sbt publish All for Scala ${{ matrix.scala.version }}"
          echo "mkdir -p dotty-docs"
          mkdir -p dotty-docs
          export SOURCE_DATE_EPOCH=$(date +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
          echo 'sbt -J-Xmx2048m ++${{ matrix.scala.version }}! -v clean publish'
          sbt \
            -J-Xmx2048m \
            ++${{ matrix.scala.version }}! \
            -v \
            clean \
            test \
            packagedArtifacts \
            devOopsGitHubReleaseUploadArtifacts \
            publish

  publish_maven:
    needs: github-release-artifacts-and-publish
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Sync LoggerF to Maven Central
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
        run: |
          export GITHUB_TAG=${GITHUB_REF#refs/tags/}
          .github/workflows/maven_central_sync.sh
