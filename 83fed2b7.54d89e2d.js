(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{59:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return c})),a.d(n,"metadata",(function(){return r})),a.d(n,"rightToc",(function(){return l})),a.d(n,"default",(function(){return g}));var t=a(2),i=a(6),o=(a(0),a(78)),c={id:"log",title:"Log - Scalaz"},r={unversionedId:"scalaz-effect/log",id:"scalaz-effect/log",isDocsHomePage:!1,title:"Log - Scalaz",description:"Log - Scalaz (WIP)",source:"@site/../generated-docs/target/mdoc/scalaz-effect/log.md",slug:"/scalaz-effect/log",permalink:"/docs/scalaz-effect/log",version:"current",sidebar:"someSidebar",previous:{title:"For Scalaz Effect",permalink:"/docs/scalaz-effect/scalaz-effect"}},l=[{value:"Log - Scalaz (WIP)",id:"log---scalaz-wip",children:[]},{value:"Log <code>F[A]</code>",id:"log-fa",children:[{value:"Example",id:"example",children:[]}]},{value:"Log <code>F[Option[A]]</code>",id:"log-foptiona",children:[]},{value:"Log <code>OptionT[F, A]</code>",id:"log-optiontf-a",children:[]},{value:"Log <code>F[A / B]</code>",id:"log-fa--b",children:[]},{value:"Log <code>EitherT[F, A, B]</code>",id:"log-eithertf-a-b",children:[]}],p={rightToc:l};function g(e){var n=e.components,a=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},p,a,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"log---scalaz-wip"},"Log - Scalaz (WIP)"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Log")," is a typeclass to log ",Object(o.b)("inlineCode",{parentName:"p"},"F[A]"),", ",Object(o.b)("inlineCode",{parentName:"p"},"F[Option[A]]"),", ",Object(o.b)("inlineCode",{parentName:"p"},"F[A \\/ B]"),", ",Object(o.b)("inlineCode",{parentName:"p"},"OptionT[F, A]")," and ",Object(o.b)("inlineCode",{parentName:"p"},"EitherT[F, A, B]"),"."),Object(o.b)("p",null,"It requires ",Object(o.b)("inlineCode",{parentName:"p"},"EffectConstructor")," from ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://kevin-lee.github.io/effectie"}),"Effectie")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Monad")," from ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/scalaz/scalaz"}),"Scalaz"),"."),Object(o.b)("h2",{id:"log-fa"},"Log ",Object(o.b)("inlineCode",{parentName:"h2"},"F[A]")),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-scala"}),"Log[F].log(F[A])(A => String)\n")),Object(o.b)("h3",{id:"example"},"Example"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-scala"}),'trait Named[A] {\n  def name(a: A): String\n}\n\nobject Named {\n  def apply[A: Named]: Named[A] = implicitly[Named[A]]\n}\n\nfinal case class GivenName(givenName: String) extends AnyVal\nfinal case class Surname(surname: String) extends AnyVal\n\nfinal case class Person(givenName: GivenName, surname: Surname)\nobject Person {\n  implicit val namedPerson: Named[Person] =\n    person => s"${person.givenName.givenName} ${person.surname.surname}"\n}\n\nimport scalaz._\nimport Scalaz._\nimport scalaz.effect._\n\nimport effectie.scalaz.EffectConstructor\nimport effectie.scalaz.ConsoleEffect\nimport effectie.scalaz.Effectful._\n\nimport loggerf.logger._\nimport loggerf.scalaz._\nimport loggerf.syntax._\n\ntrait Greeting[F[_]] {\n  def greet[A: Named](a: A): F[String]\n}\n\nobject Greeting {\n  def apply[F[_] : Greeting]: Greeting[F] = implicitly[Greeting[F]]\n\n  implicit def hello[F[_]: EffectConstructor: Monad: Log]: Greeting[F] =\n    new Greeting[F] {\n      def greet[A: Named](a: A): F[String] = for {\n        name <- log(effectOf(Named[A].name(a)))(x => info(s"The name is $x"))\n        greeting <- pureOf(s"Hello $name")\n      } yield greeting\n    }\n\n}\n\nobject MyApp {\n\n  implicit val canLog: CanLog = Slf4JLogger.slf4JCanLog("MyApp")\n\n  def run(args: List[String]): IO[Unit] = for {\n    greetingMessage <- Greeting[IO].greet(Person(GivenName("Kevin"), Surname("Lee")))\n    _ <- ConsoleEffect[IO].putStrLn(greetingMessage)\n  } yield ()\n\n  def main(args: Array[String]): Unit =\n    run(args.toList).unsafePerformIO()\n}\n')),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{}),"21:02:15.323 [ioapp-compute-0] INFO MyApp - The name is Kevin Lee\nHello Kevin Lee\n")),Object(o.b)("h2",{id:"log-foptiona"},"Log ",Object(o.b)("inlineCode",{parentName:"h2"},"F[Option[A]]")),Object(o.b)("h2",{id:"log-optiontf-a"},"Log ",Object(o.b)("inlineCode",{parentName:"h2"},"OptionT[F, A]")),Object(o.b)("h2",{id:"log-fa--b"},"Log ",Object(o.b)("inlineCode",{parentName:"h2"},"F[A \\/ B]")),Object(o.b)("h2",{id:"log-eithertf-a-b"},"Log ",Object(o.b)("inlineCode",{parentName:"h2"},"EitherT[F, A, B]")))}g.isMDXComponent=!0}}]);